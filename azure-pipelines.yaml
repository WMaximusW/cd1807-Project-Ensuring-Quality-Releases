name: Azure Pipelines

trigger:
- main

pool: TrungNQ72-Udacity-Project3-SelfHost

variables:
  - group: MyTerraformVars  # Reference your variable group here

stages:
  - stage: Build
    jobs:
      - job: BuildInfrastructure
        steps:
          # Install Terraform on the pipeline agent 
          - task: TerraformInstaller@0
            displayName: 'Terraform installation'
            inputs:
              terraformVersion: '1.2.9'
          
          # Explicit Azure login using service principal
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(azureServiceConnectionId)'
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az login --service-principal -u $(client_id) -p $(client_secret) --tenant $(tenant_id)

          # Run Terraform Init
          - task: TerraformTaskV3@3
            displayName: 'Terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
              backendServiceArm: '$(azureServiceConnectionId)'
              backendAzureRmResourceGroupName: '$(resource_group_name)'
              backendAzureRmStorageAccountName: 'tfstate39711214'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'test.terraform.tfstate'
              commandOptions: '-input=false -backend-config="client_id=$(client_id)" -backend-config="client_secret=$(client_secret)" -backend-config="tenant_id=$(tenant_id)" -backend-config="subscription_id=$(subscription_id)"'
          
           # Run Terraform Validate    
          - task: TerraformTaskV3@3
            displayName: Terraform validate
            inputs:
              provider: 'azurerm'
              command: 'validate'

          # Run Terraform Apply
          - task: TerraformTaskV3@3
            displayName: 'Terraform apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
              environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
              commandOptions: '-input=false -auto-approve'
          
          - task: TerraformTaskV3@3
            displayName: Terraform destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
              environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
              commandOptions: '-input=false -auto-approve'