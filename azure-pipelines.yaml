name: Azure Pipelines

trigger:
- main

pool: TrungNQ72-Udacity-Project3-SelfHost

variables:
  - group: MyTerraformVars  # Reference your variable group here

stages:
  - stage: Build
    jobs:
      - job: BuildInfrastructure
        steps:
          # Install Terraform on the pipeline agent 
          - task: TerraformInstaller@0
            displayName: 'Terraform installation'
            inputs:
              terraformVersion: '1.2.9'
          
          # Run Terraform Init
          - task: TerraformTaskV3@3
            displayName: 'Terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
              backendServiceArm: '$(azureServiceConnectionId)'
              backendAzureRmResourceGroupName: '$(resource_group_name)'
              backendAzureRmStorageAccountName: '$(storageAccountName)'
              backendAzureRmContainerName: '$(containerName)'
              backendAzureRmKey: 'test.terraform.tfstate'
              commandOptions: '-input=false -backend-config="client_id=$(client_id)" -backend-config="client_secret=$(client_secret)" -backend-config="tenant_id=$(tenant_id)" -backend-config="subscription_id=$(subscription_id)"'
          
           # Run Terraform Validate    
          - task: TerraformTaskV3@3
            displayName: Terraform validate
            inputs:
              provider: 'azurerm'
              command: 'validate'

          # Run Terraform Apply
          - task: TerraformTaskV3@3
            displayName: 'Terraform apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
              environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
              commandOptions: '-input=false -auto-approve -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)"'
          
          # Archive the web package
          - task: ArchiveFiles@2
            displayName: 'Archive fakerestapi web package'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/webapp.zip'
              replaceExistingArchive: true
  
  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployToAzure
        steps:
          # Deploy the archived package to Azure Web App
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: '$(azureServiceConnectionId)'
              appType: 'webApp'
              appName: 'trungnq72-web-app-project3'
              package: '$(Build.ArtifactStagingDirectory)/webapp.zip'
              deployToSlotOrASE: false           